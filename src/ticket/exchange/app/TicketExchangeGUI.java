  /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ticket.exchange.app;

import java.awt.Color;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;


/*
 *  Classname: TicketExchangeGUI.java
 * 
 *  Version information: Final
 *
 *  Date: 18th October 2017
 * @reference: https://stackoverflow.com/questions/42266148/email-validation-regex-java
 * @reference: https://github.com/joshuacassidy/Bubble-Sort
 * @author Yotaphon Sutweha, x16309311
 * In collaboration with: Joshua Cassidy, x15378586
 *
 */

public class TicketExchangeGUI extends javax.swing.JFrame {
   
    /**
     * Creates new form TicketExchangeGUI
     */
    private Seat seat;
    private ArrayList<Records> details;
    private ArrayList<Seat> gamesList;
    private String fName, lName, ppsn, age, gender, email, phoneNo, cardNumber, month, year, ccv, carPark, meal, gameName, seatName, errorMessage;
    private boolean phoneOffer, emailOffer;
    private int normalSeatsAvailable, businessSeatsAvailable, premiumSeatsAvailable, quantity;
    private double seatPrice;
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: Manages set up for the application e.g Making welcome panel appear creating files where necessary etc.
    */
    public TicketExchangeGUI() {
        initComponents();
        getContentPane().setBackground(new Color(10,229,183));
        setResizable(false);
        welcomePanel.setVisible(true);
        HomePanel.setVisible(false);
        detailsPanel.setVisible(false);
        cardPanel.setVisible(false);
        summaryPanel.setVisible(false);
        businessScrollPane.setVisible(false);
        premiumScrollPane.setVisible(false);
        normalScrollPane.setVisible(false);
        details = new ArrayList<>();
        createFile();
        getAvailaibleGames();
        parkCB.setVisible(false);
        mealCB.setVisible(false);
        mealLbl.setVisible(false);
        parkLbl.setVisible(false);
        

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /**
    * @author: Yotaphon Sutweha, x16309311
    * @purpose: Managing the GUI objects of the Application
    */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HomePanel = new javax.swing.JPanel();
        premiumCheckBox = new javax.swing.JRadioButton();
        normalCheckBox = new javax.swing.JRadioButton();
        businessCheckBox = new javax.swing.JRadioButton();
        gameCB = new javax.swing.JComboBox<>();
        premiumScrollPane = new javax.swing.JScrollPane();
        premiumTP = new javax.swing.JTextPane();
        businessScrollPane = new javax.swing.JScrollPane();
        businessTP = new javax.swing.JTextPane();
        normalScrollPane = new javax.swing.JScrollPane();
        normalTP = new javax.swing.JTextPane();
        logo = new javax.swing.JLabel();
        selectLB = new javax.swing.JLabel();
        homePageNextBtn = new javax.swing.JLabel();
        cardPanel = new javax.swing.JPanel();
        cardNumTF = new javax.swing.JTextField();
        monthTF = new javax.swing.JTextField();
        yearTF = new javax.swing.JTextField();
        ccvTF = new javax.swing.JTextField();
        nameTF = new javax.swing.JTextField();
        creditCardPageNextBtn = new javax.swing.JLabel();
        creditCardBackBtn = new javax.swing.JLabel();
        summaryPanel = new javax.swing.JPanel();
        summaryLB = new javax.swing.JLabel();
        summaryScrollPane = new javax.swing.JScrollPane();
        summaryTA = new javax.swing.JTextArea();
        exitBtn = new javax.swing.JLabel();
        detailsPanel = new javax.swing.JPanel();
        fNameLbl = new javax.swing.JLabel();
        fNameTA = new javax.swing.JTextField();
        lNameTA = new javax.swing.JTextField();
        ppsnTA = new javax.swing.JTextField();
        ageTA = new javax.swing.JTextField();
        genderTA = new javax.swing.JTextField();
        quantityCB = new javax.swing.JComboBox<>();
        emailTA = new javax.swing.JTextField();
        phoneTA = new javax.swing.JTextField();
        mealLbl = new javax.swing.JLabel();
        offerLbl = new javax.swing.JLabel();
        phoneCB = new javax.swing.JCheckBox();
        emailCB = new javax.swing.JCheckBox();
        sNameLbl = new javax.swing.JLabel();
        ppsLbl = new javax.swing.JLabel();
        ageLbl = new javax.swing.JLabel();
        genderLbl = new javax.swing.JLabel();
        qtyLbl = new javax.swing.JLabel();
        emailLbl = new javax.swing.JLabel();
        phoneLbl = new javax.swing.JLabel();
        parkCB = new javax.swing.JComboBox<>();
        parkLbl = new javax.swing.JLabel();
        mealCB = new javax.swing.JComboBox<>();
        detailsPageNextBtn = new javax.swing.JLabel();
        detailsPageBackBtn = new javax.swing.JLabel();
        totalCostDisplayLbl = new javax.swing.JLabel();
        welcomePanel = new javax.swing.JPanel();
        welcomeLbl = new javax.swing.JLabel();
        logoWelcomePage = new javax.swing.JLabel();
        welcomePageNextBtn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(700, 560));
        setPreferredSize(new java.awt.Dimension(700, 560));
        setResizable(false);

        HomePanel.setBackground(new java.awt.Color(10, 229, 183));
        HomePanel.setMaximumSize(new java.awt.Dimension(580, 380));
        HomePanel.setOpaque(false);
        HomePanel.setPreferredSize(new java.awt.Dimension(580, 380));
        HomePanel.setRequestFocusEnabled(false);

        premiumCheckBox.setBackground(new java.awt.Color(10, 229, 183));
        premiumCheckBox.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        premiumCheckBox.setForeground(new java.awt.Color(250, 250, 250));
        premiumCheckBox.setText("PREMIUM");
        premiumCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                premiumCheckBoxActionPerformed(evt);
            }
        });

        normalCheckBox.setBackground(new java.awt.Color(10, 229, 183));
        normalCheckBox.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        normalCheckBox.setForeground(new java.awt.Color(250, 250, 250));
        normalCheckBox.setText("NORMAL");
        normalCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalCheckBoxActionPerformed(evt);
            }
        });

        businessCheckBox.setBackground(new java.awt.Color(10, 229, 183));
        businessCheckBox.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        businessCheckBox.setForeground(new java.awt.Color(250, 250, 250));
        businessCheckBox.setText("BUSINESS");
        businessCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                businessCheckBoxActionPerformed(evt);
            }
        });

        gameCB.setBackground(new java.awt.Color(250, 250, 250));
        gameCB.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        gameCB.setForeground(new java.awt.Color(10, 229, 183));
        gameCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gameCB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gameCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameCBActionPerformed(evt);
            }
        });

        premiumTP.setEditable(false);
        premiumTP.setBackground(new java.awt.Color(250, 250, 250));
        premiumTP.setFont(new java.awt.Font("Verdana", 1, 9)); // NOI18N
        premiumTP.setForeground(new java.awt.Color(10, 229, 183));
        premiumScrollPane.setViewportView(premiumTP);

        businessTP.setEditable(false);
        businessTP.setBackground(new java.awt.Color(250, 250, 250));
        businessTP.setFont(new java.awt.Font("Verdana", 1, 9)); // NOI18N
        businessTP.setForeground(new java.awt.Color(10, 229, 183));
        businessScrollPane.setViewportView(businessTP);

        normalScrollPane.setForeground(new java.awt.Color(10, 229, 183));

        normalTP.setEditable(false);
        normalTP.setBackground(new java.awt.Color(250, 250, 250));
        normalTP.setFont(new java.awt.Font("Verdana", 1, 9)); // NOI18N
        normalTP.setForeground(new java.awt.Color(10, 229, 183));
        normalTP.setToolTipText("");
        normalScrollPane.setViewportView(normalTP);

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticket/Res/logo.png"))); // NOI18N

        selectLB.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        selectLB.setForeground(new java.awt.Color(250, 250, 250));
        selectLB.setText("SELECT A GAME");

        homePageNextBtn.setBackground(new java.awt.Color(10, 229, 183));
        homePageNextBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticket/res/forward-button.png"))); // NOI18N
        homePageNextBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homePageNextBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(premiumScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(premiumCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(92, 92, 92)
                        .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(businessCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(businessScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(84, 84, 84)
                        .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(normalCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(normalScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(homePageNextBtn)))
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addComponent(logo)
                        .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HomePanelLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(selectLB, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(HomePanelLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(gameCB, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomePanelLayout.createSequentialGroup()
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addComponent(selectLB)
                        .addGap(18, 18, 18)
                        .addComponent(gameCB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(logo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(businessCheckBox)
                    .addComponent(premiumCheckBox)
                    .addComponent(normalCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(premiumScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(businessScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(normalScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(homePageNextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        cardPanel.setBackground(new java.awt.Color(10, 229, 183));

        cardNumTF.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        cardNumTF.setForeground(new java.awt.Color(10, 229, 183));
        cardNumTF.setText("Card Number");
        cardNumTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cardNumTFMouseClicked(evt);
            }
        });

        monthTF.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        monthTF.setForeground(new java.awt.Color(10, 229, 183));
        monthTF.setText("MM");
        monthTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monthTFMouseClicked(evt);
            }
        });
        monthTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthTFActionPerformed(evt);
            }
        });

        yearTF.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        yearTF.setForeground(new java.awt.Color(10, 229, 183));
        yearTF.setText("YY");
        yearTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yearTFMouseClicked(evt);
            }
        });
        yearTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearTFActionPerformed(evt);
            }
        });

        ccvTF.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        ccvTF.setForeground(new java.awt.Color(10, 229, 183));
        ccvTF.setText("CCV");
        ccvTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ccvTFMouseClicked(evt);
            }
        });
        ccvTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccvTFActionPerformed(evt);
            }
        });

        nameTF.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        nameTF.setForeground(new java.awt.Color(10, 229, 183));
        nameTF.setText("Name on Card");
        nameTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameTFMouseClicked(evt);
            }
        });

        creditCardPageNextBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticket/res/forward-button.png"))); // NOI18N
        creditCardPageNextBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                creditCardPageNextBtnMouseClicked(evt);
            }
        });

        creditCardBackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticket/res/back-button.png"))); // NOI18N
        creditCardBackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                creditCardBackBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout cardPanelLayout = new javax.swing.GroupLayout(cardPanel);
        cardPanel.setLayout(cardPanelLayout);
        cardPanelLayout.setHorizontalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(creditCardBackBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(creditCardPageNextBtn)
                .addGap(74, 74, 74))
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardPanelLayout.createSequentialGroup()
                        .addComponent(monthTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(yearTF, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ccvTF, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cardPanelLayout.setVerticalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cardNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccvTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(creditCardPageNextBtn)
                    .addComponent(creditCardBackBtn))
                .addContainerGap())
        );

        summaryPanel.setBackground(new java.awt.Color(10, 229, 183));
        summaryPanel.setToolTipText("");
        summaryPanel.setPreferredSize(new java.awt.Dimension(410, 220));

        summaryLB.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        summaryLB.setForeground(new java.awt.Color(250, 250, 250));
        summaryLB.setText("Summary:");

        summaryScrollPane.setForeground(new java.awt.Color(10, 229, 183));
        summaryScrollPane.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N

        summaryTA.setEditable(false);
        summaryTA.setBackground(new java.awt.Color(250, 250, 250));
        summaryTA.setColumns(20);
        summaryTA.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        summaryTA.setForeground(new java.awt.Color(10, 229, 183));
        summaryTA.setRows(5);
        summaryScrollPane.setViewportView(summaryTA);

        exitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticket/res/logout.png"))); // NOI18N
        exitBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout summaryPanelLayout = new javax.swing.GroupLayout(summaryPanel);
        summaryPanel.setLayout(summaryPanelLayout);
        summaryPanelLayout.setHorizontalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(summaryPanelLayout.createSequentialGroup()
                        .addComponent(summaryLB, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(summaryScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        summaryPanelLayout.setVerticalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(summaryLB, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(summaryScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        detailsPanel.setBackground(new java.awt.Color(10, 229, 183));
        detailsPanel.setPreferredSize(new java.awt.Dimension(623, 422));

        fNameLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        fNameLbl.setForeground(new java.awt.Color(250, 250, 250));
        fNameLbl.setText("*First name:");

        fNameTA.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        fNameTA.setForeground(new java.awt.Color(10, 229, 183));
        fNameTA.setPreferredSize(new java.awt.Dimension(99, 26));
        fNameTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameTAActionPerformed(evt);
            }
        });

        lNameTA.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lNameTA.setForeground(new java.awt.Color(10, 229, 183));
        lNameTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lNameTAActionPerformed(evt);
            }
        });

        ppsnTA.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        ppsnTA.setForeground(new java.awt.Color(10, 229, 183));
        ppsnTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppsnTAActionPerformed(evt);
            }
        });

        ageTA.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        ageTA.setForeground(new java.awt.Color(10, 229, 183));
        ageTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTAActionPerformed(evt);
            }
        });

        genderTA.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        genderTA.setForeground(new java.awt.Color(10, 229, 183));
        genderTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderTAActionPerformed(evt);
            }
        });

        quantityCB.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        quantityCB.setForeground(new java.awt.Color(10, 229, 183));
        quantityCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        quantityCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityCBActionPerformed(evt);
            }
        });

        emailTA.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        emailTA.setForeground(new java.awt.Color(10, 229, 183));
        emailTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTAActionPerformed(evt);
            }
        });

        phoneTA.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        phoneTA.setForeground(new java.awt.Color(10, 229, 183));
        phoneTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTAActionPerformed(evt);
            }
        });

        mealLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        mealLbl.setForeground(new java.awt.Color(250, 250, 250));
        mealLbl.setText("Choose  your meal:");

        offerLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        offerLbl.setForeground(new java.awt.Color(250, 250, 250));
        offerLbl.setText("Do you want to receive future special offer?");

        phoneCB.setBackground(new java.awt.Color(10, 229, 183));
        phoneCB.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        phoneCB.setForeground(new java.awt.Color(250, 250, 250));
        phoneCB.setText("Phone");
        phoneCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneCBActionPerformed(evt);
            }
        });

        emailCB.setBackground(new java.awt.Color(10, 229, 183));
        emailCB.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        emailCB.setForeground(new java.awt.Color(250, 250, 250));
        emailCB.setText("Email");
        emailCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailCBActionPerformed(evt);
            }
        });

        sNameLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        sNameLbl.setForeground(new java.awt.Color(250, 250, 250));
        sNameLbl.setText("*Second name:");

        ppsLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        ppsLbl.setForeground(new java.awt.Color(250, 250, 250));
        ppsLbl.setText("*PPSN");

        ageLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        ageLbl.setForeground(new java.awt.Color(250, 250, 250));
        ageLbl.setText("Age:");

        genderLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        genderLbl.setForeground(new java.awt.Color(250, 250, 250));
        genderLbl.setText("Gender:");

        qtyLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        qtyLbl.setForeground(new java.awt.Color(250, 250, 250));
        qtyLbl.setText("*Quantity:");

        emailLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        emailLbl.setForeground(new java.awt.Color(250, 250, 250));
        emailLbl.setText("Email:");

        phoneLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        phoneLbl.setForeground(new java.awt.Color(250, 250, 250));
        phoneLbl.setText("Phone:");

        parkCB.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        parkCB.setForeground(new java.awt.Color(10, 229, 183));
        parkCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        parkCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parkCBActionPerformed(evt);
            }
        });

        parkLbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        parkLbl.setForeground(new java.awt.Color(250, 250, 250));
        parkLbl.setText("Where would  you like to park?");

        mealCB.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        mealCB.setForeground(new java.awt.Color(10, 229, 183));
        mealCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mealCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealCBActionPerformed(evt);
            }
        });

        detailsPageNextBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticket/res/forward-button.png"))); // NOI18N
        detailsPageNextBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                detailsPageNextBtnMouseClicked(evt);
            }
        });

        detailsPageBackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticket/res/back-button.png"))); // NOI18N
        detailsPageBackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                detailsPageBackBtnMouseClicked(evt);
            }
        });

        totalCostDisplayLbl.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        totalCostDisplayLbl.setForeground(new java.awt.Color(255, 255, 255));
        totalCostDisplayLbl.setText("0");

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addComponent(detailsPageBackBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(detailsPageNextBtn))
                    .addComponent(offerLbl, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mealLbl)
                            .addComponent(parkLbl))
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(phoneCB, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emailCB, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mealCB, 0, 165, Short.MAX_VALUE)
                                    .addComponent(parkCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(68, 68, 68))))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailLbl)
                            .addComponent(ageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addComponent(emailTA, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(phoneLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phoneTA, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addComponent(ageTA, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(genderLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(genderTA, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(qtyLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quantityCB, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(totalCostDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, detailsPanelLayout.createSequentialGroup()
                        .addComponent(fNameLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fNameTA, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sNameLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lNameTA, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ppsLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ppsnTA, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lNameTA, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fNameTA, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ppsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ppsnTA, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addComponent(ageTA, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(genderLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(qtyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(genderTA)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(quantityCB)
                                .addComponent(totalCostDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneTA, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTA, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneCB)
                            .addComponent(emailCB)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(offerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mealLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mealCB, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parkLbl)
                    .addComponent(parkCB, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(detailsPageNextBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detailsPageBackBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        welcomePanel.setBackground(new java.awt.Color(10, 229, 183));
        welcomePanel.setForeground(new java.awt.Color(250, 250, 250));
        welcomePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                welcomePanelMouseClicked(evt);
            }
        });

        welcomeLbl.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        welcomeLbl.setForeground(new java.awt.Color(250, 250, 250));
        welcomeLbl.setText("WELCOME TO SHERIDAN'S TICKET SALES");

        logoWelcomePage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticket/Res/logo.png"))); // NOI18N

        welcomePageNextBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticket/res/forward-button.png"))); // NOI18N
        welcomePageNextBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                welcomePageNextBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(welcomePanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(welcomeLbl))
                    .addGroup(welcomePanelLayout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(logoWelcomePage)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanelLayout.createSequentialGroup()
                .addGap(0, 547, Short.MAX_VALUE)
                .addComponent(welcomePageNextBtn)
                .addGap(58, 58, 58))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(logoWelcomePage, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(welcomeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(welcomePageNextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HomePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                    .addComponent(detailsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                    .addComponent(summaryPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                    .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addComponent(welcomePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(HomePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(detailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(welcomePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(summaryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
    * @author: Joshua Cassidy, x15378586
    * @purpose: creates the Games and Records object files where these files don't exist. These files are empty upon creating.
    */
    private void createFile() {
        File file;
        file = new File("Games.dat");
        if(!file.exists()){
            createSeatsForGames();
        }
        file = new File("Records.dat");
        if(!file.exists()){
            details = new ArrayList<>();
            writeToFile("Records.dat", details);
        }
    }
    
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: Creating a new instance of seat. Setting appropiate text for the normalTP. Managing other GUI object on the JPanel.
    */
    private void normalCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalCheckBoxActionPerformed
        // TODO add your handling code here:
        gameName = gamesList.get(gameCB.getSelectedIndex()).getGameName();
        normalSeatsAvailable = gamesList.get(gameCB.getSelectedIndex()).getNormalSeatsAvailable();
        businessSeatsAvailable = gamesList.get(gameCB.getSelectedIndex()).getBusinessSeatAvailable();
        premiumSeatsAvailable = gamesList.get(gameCB.getSelectedIndex()).getPremiumSeatAvailable();
        seat = new Seat(gameName,normalSeatsAvailable,businessSeatsAvailable, premiumSeatsAvailable);
        seatName = seat.getSeatName();
        if(normalSeatsAvailable == 0) {
                normalTP.setText("Sold out!"); 
            } else {  
              normalTP.setText("Package Includes:\n" + seatName + "\nLocation: " + seat.getSeatArea() + "\n\n" + seat.getSeatPrice() + "\n" + normalSeatsAvailable + " Available" );  
            }
        normalCheckBox.setSelected(true);
        normalScrollPane.setVisible(true);
        premiumCheckBox.setSelected(false);
        premiumScrollPane.setVisible(false);
        businessCheckBox.setSelected(false);
        businessScrollPane.setVisible(false);
        getContentPane().validate();
        getContentPane().repaint();
    }//GEN-LAST:event_normalCheckBoxActionPerformed
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: Managing other GUI object on the JPanel.
    */
    private void gameCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameCBActionPerformed
        // TODO add your handling code here:
        getContentPane().validate();
        getContentPane().repaint();
        normalCheckBox.setSelected(false);
        normalScrollPane.setVisible(false);
        premiumCheckBox.setSelected(false);
        premiumScrollPane.setVisible(false);
        businessCheckBox.setSelected(false);
        businessScrollPane.setVisible(false);
        
    }//GEN-LAST:event_gameCBActionPerformed
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @reference: https://stackoverflow.com/questions/42266148/email-validation-regex-java
    * @purpose: Manages validation when regular expressions are used.
    */
    private boolean validation(String regex, String textField) {
        Pattern p = Pattern.compile(regex);
        Matcher m = p.matcher(textField);
        if(!m.find()){
            return false;
        } else {
            return true;
        }
    }
    
   
    private void fNameTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fNameTAActionPerformed

    private void lNameTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lNameTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lNameTAActionPerformed

    private void ppsnTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppsnTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppsnTAActionPerformed

    private void ageTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTAActionPerformed

    private void genderTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderTAActionPerformed
    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: Managing the price of the tickets.
    */
    private void quantityCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityCBActionPerformed
        // TODO add your handling code here: 
        seatPrice = seat.getPrice();
        quantity = Integer.parseInt(quantityCB.getSelectedItem().toString());
        totalCostDisplayLbl.setText(String.format("€%.2f",seatPrice*quantity));
        
    }//GEN-LAST:event_quantityCBActionPerformed

    private void emailTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTAActionPerformed

    private void phoneTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTAActionPerformed
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @purpose: Managing text for the users, first name, last name and pps number. 
    */
    private boolean requiredFieldValidation(){// check if the required text fields are empty
        if(fNameTA.getText().equals("") || lNameTA.getText().equals("") || ppsnTA.getText().equals("")){
            return false;
        } else {
            return true;    
        }
        
    }
    
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: Creating a list of games and write them to the object file, Games.dat with their quantities available.
    */
    private void createSeatsForGames(){
        try{
            File file = new File("Games.dat");
            FileOutputStream fos = new FileOutputStream(file);
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            String[] games = { "South Africa V Thailand", "Ireland V Thailand", "Spain V South Africa", "Spain V Thailand", "Ireland V South Africa", "Ireland V Spain"};
            sortGames(games);
            ArrayList<Seat> listOfGames = new ArrayList<>();
            Seat game;
            for(String i: games){
                game = new Seat(i,30000,500,2500);
                listOfGames.add(game);
            }
            oos.writeObject(listOfGames);
            oos.close();

        } catch(IOException e){
            System.out.println("Exception: " + e.getMessage());
        }
    }
    
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: Sorting the list of games that are inserted into the listOfGamesArrayList.
    * @reference: https://github.com/joshuacassidy/Bubble-Sort
    */
    public void sortGames(String[] games) {
        for(int i = 0; i < games.length-1; i++){
            for (int j = 0; j < games.length-i-1; j++){
                if(games[j].compareTo(games[j+1]) > 0){
                    String temp = games[j+1];
                    games[j+1] = games[j];
                    games[j] = temp;
                }
            }
        }
    }
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifidBy Joshua Cassidy, x15378586
    * @purpose: write the specified ArrayList with the name of 'data' to the specified file which is denoted by the String parameter.    */
    private void writeToFile(String fileName, ArrayList data) {
        try{
            File file = new File(fileName);
            FileOutputStream fos = new FileOutputStream(file);
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(data);
            oos.close();
        } catch (IOException e){
            System.out.println("Exception: " + e.getMessage());
        }
    }
    /**
    * @author Yotaphon Sutweha, x16309311
    * @purpose: reading data from a Records.dat file and storing the data into details array.
    */     
    private void readDetails(){
        try{
            File f = new File("Records.dat");
            FileInputStream input = new FileInputStream(f);
            ObjectInputStream ois = new ObjectInputStream(input);
            details = (ArrayList<Records>) ois.readObject();
            ois.close();
        } catch(IOException | ClassNotFoundException e){
            System.out.println("Exception: " + e.getMessage());
        }
    }
    
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: reading game list from Game.dat, and populating data into the gameCB combo box. 
    */
    private void getAvailaibleGames(){
        gameCB.removeAllItems();        
        try{
            File file = new File("Games.dat");
            FileInputStream input = new FileInputStream(file);
            ObjectInputStream objectInputStream = new ObjectInputStream(input);
            gamesList = (ArrayList<Seat>) objectInputStream.readObject();
            for(Seat i: gamesList){
                gameCB.addItem(i.getGameName());
            }
            objectInputStream.close();
        } catch(IOException | ClassNotFoundException e){
            System.out.println("Exception: " + e.getMessage());
        }
    }
    
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: Checks if the user has already bought tickets to the chosen game and if they have bought more than four tickets or corporate box.
    */
    private Boolean checkID(){
        int amountAlreadyPurchased = 0;
        for(Records i: details){
            if (seat instanceof BusinessSeat && i.getPpsn().equals(ppsnTA.getText()) && i.getGameName().equals(gameCB.getSelectedItem()) && i.getSeatType().equals("Business Class Seat")) {
                return true;
            } else {
                if(i.getPpsn().equals(ppsnTA.getText()) && i.getGameName().equals(gameCB.getSelectedItem()) && i.getSeatType().equals("Business Class Seat")){
                amountAlreadyPurchased+=i.getQuanity();
                if ((amountAlreadyPurchased+quantity) > 4){
                        return true;
                    }
                }
            } 
        }
        return false;
    }
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: Creating a new instance of seat. Setting appropiate text for the premiumTP. Managing other GUI object on the JPanel.
    */
    private void premiumCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_premiumCheckBoxActionPerformed
        // TODO add your handling code here:
        gameName = gamesList.get(gameCB.getSelectedIndex()).getGameName();
        normalSeatsAvailable = gamesList.get(gameCB.getSelectedIndex()).getNormalSeatsAvailable();
        businessSeatsAvailable = gamesList.get(gameCB.getSelectedIndex()).getBusinessSeatAvailable();
        premiumSeatsAvailable = gamesList.get(gameCB.getSelectedIndex()).getPremiumSeatAvailable();
        seat = new PremiumSeat(gameName, normalSeatsAvailable,businessSeatsAvailable,premiumSeatsAvailable);
        seatName = seat.getSeatName();        
        if(premiumSeatsAvailable == 0) {
            premiumTP.setText("Sold out!"); 
        } else {  
          premiumTP.setText("Package Includes:\n" + seatName + "\nLocated in the " + seat.getSeatArea() + "\nChoice of meal\nReserved Parking Space\nFasttrack\n" + "\n" + seat.getSeatPrice() + "\n" + premiumSeatsAvailable + " Available");  
        }
        normalCheckBox.setSelected(false);
        normalScrollPane.setVisible(false);
        premiumCheckBox.setSelected(true);
        premiumScrollPane.setVisible(true);
        businessCheckBox.setSelected(false);
        businessScrollPane.setVisible(false);
        getContentPane().validate();
        getContentPane().repaint();
    }//GEN-LAST:event_premiumCheckBoxActionPerformed
    
    /**
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: Creating a new instance of seat. Setting appropiate text for the businessTP. Managing other GUI object on the JPanl.
    */
    private void businessCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_businessCheckBoxActionPerformed
        // TODO add your handling code here:
        gameName = gamesList.get(gameCB.getSelectedIndex()).getGameName();
        normalSeatsAvailable = gamesList.get(gameCB.getSelectedIndex()).getNormalSeatsAvailable();
        businessSeatsAvailable = gamesList.get(gameCB.getSelectedIndex()).getBusinessSeatAvailable();
        premiumSeatsAvailable = gamesList.get(gameCB.getSelectedIndex()).getPremiumSeatAvailable();
        seat = new BusinessSeat(gameName,normalSeatsAvailable, businessSeatsAvailable, premiumSeatsAvailable);
        seatName = seat.getSeatName();
        if(seat.getBusinessSeatAvailable() == 0) {
            businessTP.setText("Sold out!");
        } else {
           businessTP.setText("Package Includes:\n" + ((BusinessSeat)seat).getCapacity() + " " +seatName+ "s" +  "\nLocated in the " + seat.getSeatArea() + "\nChoice of meal\n" + "\n" + seat.getSeatPrice() + "\n" + businessSeatsAvailable + " Available"); 
        }
        businessCheckBox.setSelected(true);
        businessScrollPane.setVisible(true);
        premiumCheckBox.setSelected(false);
        premiumScrollPane.setVisible(false);
        normalCheckBox.setSelected(false);
        normalScrollPane.setVisible(false);
        getContentPane().validate();
        getContentPane().repaint();
    }//GEN-LAST:event_businessCheckBoxActionPerformed
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @purpose: clearing text fields when clicked.
    */
    private void cardNumTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cardNumTFMouseClicked
        // TODO add your handling code here:
        cardNumTF.setText("");
    }//GEN-LAST:event_cardNumTFMouseClicked
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @purpose: clearing text fields when clicked.
    */
    private void monthTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthTFMouseClicked
        // TODO add your handling code here:
          monthTF.setText("");
    }//GEN-LAST:event_monthTFMouseClicked
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @purpose: clearing text fields when clicked.
    */
    private void yearTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearTFMouseClicked
        // TODO add your handling code here:
         yearTF.setText("");
    }//GEN-LAST:event_yearTFMouseClicked
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @purpose: clearing text fields when clicked.
    */
    private void ccvTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ccvTFMouseClicked
        // TODO add your handling code here:
        ccvTF.setText("");
    }//GEN-LAST:event_ccvTFMouseClicked

    /**
    * @author Yotaphon Sutweha, x16309311
    * @purpose: clearing text fields when clicked.
    */
    private void nameTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameTFMouseClicked
        // TODO add your handling code here:
        nameTF.setText("");
    }//GEN-LAST:event_nameTFMouseClicked

    private void phoneCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneCBActionPerformed

    private void emailCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailCBActionPerformed

    private void parkCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parkCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parkCBActionPerformed

    private void ccvTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccvTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ccvTFActionPerformed

    /**
    * @author: Joshua Cassidy, X15378586
    * @purpose: Adding a list of items to the JComboBox
    */    
    private void addItemsToCheckBox(String[] itemsToBeAdded, JComboBox<String> combo){
        combo.removeAllItems();
        for (String i: itemsToBeAdded){
            combo.addItem(i);
        }
    }
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: checks if the user has selected a seat before proceeding and managing the object in the next JPanel.
    */
    private void homePageNextBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageNextBtnMouseClicked
        // TODO add your handling code here:
        gameName = gameCB.getSelectedItem().toString();
        if(!businessCheckBox.isSelected() && !premiumCheckBox.isSelected() && !normalCheckBox.isSelected()){
            JOptionPane.showMessageDialog(null,"Please Select a Seat.");
        } else{
            detailsPanel.setVisible(true);// open filling details page
            HomePanel.setVisible(false);// close seat page (first page)
            totalCostDisplayLbl.setText(String.format("€%.2f",seat.getPrice()));
            if(seat instanceof PremiumSeat){
                mealCB.setVisible(true);
                mealLbl.setVisible(true);
                parkLbl.setVisible(true);
                parkCB.setVisible(true);
                quantityCB.setVisible(true);
                qtyLbl.setVisible(true);
                addItemsToCheckBox(((PremiumSeat)seat).getParking(), parkCB);
                addItemsToCheckBox(((PremiumSeat)seat).getMeal(), mealCB);
            } else if (seat instanceof BusinessSeat) {
                quantityCB.setVisible(false);
                qtyLbl.setVisible(false);
                mealCB.setVisible(true);
                mealLbl.setVisible(true);
                parkLbl.setVisible(false);
                parkCB.setVisible(false);
                addItemsToCheckBox(((BusinessSeat)seat).getMeal(), mealCB);
            } else {
                quantityCB.setVisible(true);
                qtyLbl.setVisible(true);
                mealCB.setVisible(false);
                mealLbl.setVisible(false);
                parkLbl.setVisible(false);
                parkCB.setVisible(false);
            }
        }
    }//GEN-LAST:event_homePageNextBtnMouseClicked

    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586    
    * @purpose: Displays an appropriate error message if any details are invalid.
    */
    private String isDetailsValid(boolean emptyVa, boolean ticketNameVa, boolean phoneVa, boolean emailVa, boolean ageVa, boolean ppsVa) {
        if(!emptyVa){
            return "Please fill in your name and pps no";
        }
        //validate if the fName and lName only contains character not numbers and special letter
        else if(!ticketNameVa){
            return "Only alphabetical characters are allowed in First name and Second name!";
        }
        //--------------------Phone validation----------------------//
        else if(!phoneVa && phoneCB.isSelected()){//if the phone number from user doesn't match the pattern, make them type in again
            return "Please type in an valid phone number to recieve offers!";
        }
        else if(!ageVa){
            return "Please enter a valid age!";
        }
        else if(!ppsVa){
            return "Please enter a valid pps number!";
        }
        else if(!emailVa && emailCB.isSelected()){
            return "Please type an valid in email to recieve offers! Please note you can only book one type of seat.";
        } else {
            return "";
        }
    }
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: Displays an appropriate error message if any details are invalid.
    */
    private String isDetailsValid(boolean cardNumVa, boolean monthVa, boolean yearVa, boolean ccvVa, boolean cardNameVa) {
                
        if(!cardNumVa){
            return "Please type in an appropriate an appropriate card number!";
        } else if(!monthVa){
            return "Please type in an appropriate an appropriate month!";
        } else if(!yearVa){//if the phone number from user doesn't match the pattern, make them type in again
            return "Please type in an appropriate an appropriate year!";
        }else if(!ccvVa){
            return "Please type in an appropriate an appropriate CCV number!";
        } else if(!cardNameVa){
            return "Please type in an appropriate an appropriate name on card!";
        } else {
            return "";
        }      
    }
    
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: checks if there is any available seats.
    */
    private String isAvailableSeat( int quantity) {
        if (seat instanceof BusinessSeat && businessSeatsAvailable-quantity < 0) {
            return "You can't purchase " + quantity + " ticket(s) there is only " + seat.getBusinessSeatAvailable() + " available.";
            } else if(seat instanceof PremiumSeat && premiumSeatsAvailable-quantity < 0) {
                return "You can't purchase " + quantity + " ticket(s) there is only " + seat.getPremiumSeatAvailable() + " available.";
            } else {
                if (normalSeatsAvailable-quantity < 0) {
                    return "You can't purchase " + quantity + " ticket(s) there is only " + seat.getNormalSeatsAvailable() + " available.";
                } else {
                    return "";
                }
            }
        
    }
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: Check if they have bought the tickets before and if they have exceeded the amount of seats purchased , check the if the user inputs are validated and displaying error message, in addition contains Regex for validation of this page.
    * 
    */
    private void detailsPageNextBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailsPageNextBtnMouseClicked
        // TODO add your handling code here:
        quantity = Integer.parseInt(quantityCB.getSelectedItem().toString());
        errorMessage = isDetailsValid(requiredFieldValidation(),validation("^[\\p{L} .'-]+$", (fNameTA.getText()+lNameTA.getText())),validation("\\d{10}|\\d{3}-\\d{7}|\\d{3}-\\d{3}-\\d{4}", phoneTA.getText()),validation("[a-zA-Z0-9\\p{Punct}]+@[a-zA-Z]++.[a-zA-Z]{2,4}+|[a-zA-Z0-9\\p{Punct}]+@[a-zA-Z]+.[a-zA-Z]{2,4}+.[a-zA-Z]{2}$", emailTA.getText()),validation("^[0-9\\s]+$", ageTA.getText()+" "), validation("\\d{7}\\w{1,2}$", ppsnTA.getText()));

         String availableSeats = isAvailableSeat(quantity);
        //validate required fields
        if (!errorMessage.equals("")){
            JOptionPane.showMessageDialog(null, errorMessage);
        } else if (!availableSeats.equals("")) {
            JOptionPane.showMessageDialog(null, availableSeats);
        } else{
            readDetails();
            if(checkID()){
                if(seat instanceof BusinessSeat){
                    JOptionPane.showMessageDialog(null,"You can only book one corporate box. If this is not the case contact us at 0831880578.");
                } else {
                    JOptionPane.showMessageDialog(null,"You appear to exceed the limit of bookings each customer can only book 5 seats or one corporate box. If this is not the case contact us at 0831880578.");
                }
            } else {
                cardPanel.setVisible(true);// open filling card detail page
                detailsPanel.setVisible(false);//close filling detail page 
            }
        }
    }//GEN-LAST:event_detailsPageNextBtnMouseClicked
    
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: handles the string that will be outputted that contains the meal and parking information.
    */
    private String mealAndParkingDetails(String selectedMeal) {

        if (seat instanceof PremiumSeat) {
            return "Your meal selection is: " + selectedMeal + "\tYour parking plan is: " + parkCB.getSelectedItem();
        } else if (seat instanceof BusinessSeat) {
            return "Your meal selection is: " + selectedMeal + "\n";
        } else {
            return "";
        }
    }
    
    /**
    * @author Joshua Cassidy, x15378586
    * @purpose: write the ticket information to tickets.txt file.
    */
    private void writeToTicketFile(int availableSeat){
        try{ 
            File file = new File ("tickets.txt");
            FileWriter fw = new FileWriter(file,true);
            BufferedWriter bw = new BufferedWriter(fw);
            String ticketIdLetters = (gameCB.getSelectedItem()).toString();
            bw.write("\t\tTicket Details\n");        
            for(int i = 0; i < quantity; i++){
                bw.write("Ticket Id: " + (seat.getMaxSeatsAvailable()-availableSeat+i+1)+ticketIdLetters.replaceAll("[a-z()0-9. ]","") + "\t\tGate: " + seat.getGate() + "\n" + "Name: " + fName + " " + lName  + "\tPassport Number: " + ppsnTA.getText() + "\n" + "Seat Area: " +seat.getSeatArea() + " \tSeat Name: " + seatName + "\n" + mealAndParkingDetails(mealCB.getSelectedItem().toString()));

            }
            bw.close();
        } catch (IOException e){
            System.out.println("Exception: " + e.getMessage());
        }
    }

    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: handles the back button from details panel to the home panel
    */
    private void detailsPageBackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailsPageBackBtnMouseClicked
        // TODO add your handling code here:
        HomePanel.setVisible(true);// go back to seat page
        detailsPanel.setVisible(false);//close filling detail page
    }//GEN-LAST:event_detailsPageBackBtnMouseClicked
    
    /**
     * @author Yotaphon Sutweha, x16309311
    * @modifiedBy Joshua Cassidy, x15378586
    * @purpose: creating new a new record of the user details and adding to the details ArrayList. Managing the new record that has been created writing them to the tickets file and adding the record to the ArrayList of Details.
    */
    private void createRecord() {
        Records records;
        int gameSelected = gameCB.getSelectedIndex();
        Seat selectedSeat = gamesList.get(gameSelected);
        
        phoneOffer = phoneCB.isSelected();
        emailOffer = emailCB.isSelected();
        carPark = parkCB.getSelectedItem().toString();
        meal = mealCB.getSelectedItem().toString();
        fName = fNameTA.getText();
        lName = lNameTA.getText();
        ppsn = ppsnTA.getText();
        age = ageTA.getText();
        gender = genderTA.getText();
        email = emailTA.getText();
        phoneNo = phoneTA.getText();
        cardNumber = cardNumTF.getText();
        month = monthTF.getText();
        year = yearTF.getText();
        ccv = ccvTF.getText();
        
        seatName = seat.getSeatName();
        if(seat instanceof PremiumSeat){
                selectedSeat.setPremiumSeatAvailable(selectedSeat.getPremiumSeatAvailable()-quantity);
                writeToTicketFile(seat.getPremiumSeatAvailable());
                records = new Records(fName,lName,ppsn,age,gender,quantity,meal,carPark,email,phoneNo,phoneOffer,emailOffer,cardNumber,month,year,ccv,gameName, seatName);
            } else if(seat instanceof BusinessSeat){
            // Decrement the value by one because the user doesnt have the choice to buy more than one box
                selectedSeat.setBusinessSeatAvailable(selectedSeat.getBusinessSeatAvailable()-1);
                writeToTicketFile(seat.getBusinessSeatAvailable());
                records = new Records(fName,lName,ppsn,age,gender,((BusinessSeat)seat).getCapacity(),meal,phoneNo,meal,phoneOffer,emailOffer,cardNumber,month,year,ccv,gameName, seatName);
            } else {
                selectedSeat.setNormalSeatsAvailable(selectedSeat.getNormalSeatsAvailable()-quantity);
                writeToTicketFile(seat.getNormalSeatsAvailable());
                records = new Records(fName,lName,ppsn,age,gender,quantity,email,phoneNo,meal,phoneOffer,emailOffer,cardNumber,month,year,ccv,gameName, seatName);
            }
            details.add(records);

    }
    
    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: managing credit card details and validating if the user inputs are valid the application, creates a new record otherwise the application displays an appropriate error message.
    */
    private void creditCardPageNextBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creditCardPageNextBtnMouseClicked
        // TODO add your handling code here:
        errorMessage = isDetailsValid(validation("\\d{13,16}", cardNumTF.getText()), validation("^1[0-2]$|^0[1-9]$", monthTF.getText()),validation("^\\d{4}$|^\\d{2}$", yearTF.getText()),validation("^\\d{3}$", ccvTF.getText()),validation("^[\\p{L} .'-]+$", nameTF.getText()) && !nameTF.getText().equals("Name on Card"));

        if(!errorMessage.equals("")) {
            JOptionPane.showMessageDialog(null,errorMessage);
        }else{
            summaryPanel.setVisible(true); //go to summary page
            cardPanel.setVisible(false); //close filling card detail page 
            createRecord();
            writeToFile("Records.dat", details);
            if (seat instanceof BusinessSeat ) {
                summaryTA.setText("Thank you " + fName + ".\n Your corporate box to " + gameName + "\n has been successfully purchased and\n can be your validation codes can be found in tickets.txt");
            } else {
                summaryTA.setText("Thank you " + fName + ".\n Your " + quantity + " ticket(s) to " + gameName + "\n has been successfully purchased and\n can be your validation codes can be found in tickets.txt");
            }  
            writeToFile("Games.dat",gamesList);
        }           
    }//GEN-LAST:event_creditCardPageNextBtnMouseClicked

    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: handles back button of the credit card page.
    */
    private void creditCardBackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creditCardBackBtnMouseClicked
        // TODO add your handling code here:
        detailsPanel.setVisible(true);// go back to filling detail page
        cardPanel.setVisible(false);// close down filling card detail page
    }//GEN-LAST:event_creditCardBackBtnMouseClicked
    /**
    * @author Yotaphon Sutweha, x16309311
    * @modifiedBy: Joshua Cassidy, x15378586
    * @purpose: handles exit button and display "Thank you"
    */
    private void exitBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBtnMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Thank You!");
        System.exit(0);
    }//GEN-LAST:event_exitBtnMouseClicked

    private void mealCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mealCBActionPerformed

    private void yearTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearTFActionPerformed

    private void monthTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthTFActionPerformed

    private void welcomePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_welcomePanelMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_welcomePanelMouseClicked

    private void welcomePageNextBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_welcomePageNextBtnMouseClicked
        // TODO add your handling code here:
         HomePanel.setVisible(true);
    }//GEN-LAST:event_welcomePageNextBtnMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketExchangeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketExchangeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketExchangeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketExchangeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketExchangeGUI().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HomePanel;
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTA;
    private javax.swing.JRadioButton businessCheckBox;
    private javax.swing.JScrollPane businessScrollPane;
    private javax.swing.JTextPane businessTP;
    private javax.swing.JTextField cardNumTF;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JTextField ccvTF;
    private javax.swing.JLabel creditCardBackBtn;
    private javax.swing.JLabel creditCardPageNextBtn;
    private javax.swing.JLabel detailsPageBackBtn;
    private javax.swing.JLabel detailsPageNextBtn;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JCheckBox emailCB;
    private javax.swing.JLabel emailLbl;
    private javax.swing.JTextField emailTA;
    private javax.swing.JLabel exitBtn;
    private javax.swing.JLabel fNameLbl;
    private javax.swing.JTextField fNameTA;
    private javax.swing.JComboBox<String> gameCB;
    private javax.swing.JLabel genderLbl;
    private javax.swing.JTextField genderTA;
    private javax.swing.JLabel homePageNextBtn;
    private javax.swing.JTextField lNameTA;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel logoWelcomePage;
    private javax.swing.JComboBox<String> mealCB;
    private javax.swing.JLabel mealLbl;
    private javax.swing.JTextField monthTF;
    private javax.swing.JTextField nameTF;
    private javax.swing.JRadioButton normalCheckBox;
    private javax.swing.JScrollPane normalScrollPane;
    private javax.swing.JTextPane normalTP;
    private javax.swing.JLabel offerLbl;
    private javax.swing.JComboBox<String> parkCB;
    private javax.swing.JLabel parkLbl;
    private javax.swing.JCheckBox phoneCB;
    private javax.swing.JLabel phoneLbl;
    private javax.swing.JTextField phoneTA;
    private javax.swing.JLabel ppsLbl;
    private javax.swing.JTextField ppsnTA;
    private javax.swing.JRadioButton premiumCheckBox;
    private javax.swing.JScrollPane premiumScrollPane;
    private javax.swing.JTextPane premiumTP;
    private javax.swing.JLabel qtyLbl;
    private javax.swing.JComboBox<String> quantityCB;
    private javax.swing.JLabel sNameLbl;
    private javax.swing.JLabel selectLB;
    private javax.swing.JLabel summaryLB;
    private javax.swing.JPanel summaryPanel;
    private javax.swing.JScrollPane summaryScrollPane;
    private javax.swing.JTextArea summaryTA;
    private javax.swing.JLabel totalCostDisplayLbl;
    private javax.swing.JLabel welcomeLbl;
    private javax.swing.JLabel welcomePageNextBtn;
    private javax.swing.JPanel welcomePanel;
    private javax.swing.JTextField yearTF;
    // End of variables declaration//GEN-END:variables
}
